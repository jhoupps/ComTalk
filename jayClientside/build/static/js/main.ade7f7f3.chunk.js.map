{"version":3,"sources":["Constants/PageTypes/PageTypes.js","Components/Auth/Components/SignForm/SignForm.js","Constants/APIEndpoints/APIEndpoints.js","Components/Errors/Errors.js","Components/Auth/Components/SignUp/SignUp.js","Components/Auth/Components/SignIn/SignIn.js","Components/Auth/Components/ForgotPassword/ForgotPassword.js","Components/Auth/Auth.js","Components/Main/Content/MainPageContent/MainPageContent.js","Components/Main/Components/SignOutButton/SignOutButton.js","Components/Main/Components/ViewForum/ViewForum.js","Components/Main/Components/UpdateName/UpdateName.js","Components/Main/Components/UpdateAvatar/UpdateAvatar.js","Components/Main/Components/CreateNewForum/CreateNewForum.js","Components/Main/Main.js","App.js","serviceWorker.js","index.js"],"names":["PageTypes","signIn","signUp","signedInMain","signedInUpdateName","signedInUpdateAvatar","forgotPassword","createNewForum","viewForum","SignForm","_ref","setField","submitForm","values","fields","react_default","a","createElement","Fragment","onSubmit","map","d","key","name","id","value","onChange","type","APIEndpoints","base","testbase","handlers","users","myuser","myuserAvatar","sessions","sessionsMine","resetPasscode","passwords","forum","specificForum","Errors","error","setError","className","onClick","SignUp","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","e","setState","defineProperty","target","asyncToGenerator","regenerator_default","mark","_callee","_this$state","email","userName","firstName","lastName","password","passwordConf","sendData","response","authToken","user","wrap","_context","prev","next","preventDefault","state","fetch","api","method","body","JSON","stringify","headers","Headers","Content-Type","sent","status","text","abrupt","get","localStorage","setItem","setAuthToken","json","setUser","stop","_x","apply","arguments","_this2","Components_Errors_Errors","Components_SignForm_SignForm","setPage","Component","SignIn","ForgotPassword","sendResetCode","alert","resetCodeSent","updatePassword","_ref2","_callee2","resetCode","_context2","_x2","setValue","_this$state2","Auth","page","Components_SignUp_SignUp","Components_SignIn_SignIn","Components_ForgotPassword_ForgotPassword","MainPageContent","_useState","useState","_useState2","slicedToArray","setForumName","_useState3","_useState4","name2","setForumName2","_useState5","_useState6","name3","setForumName3","_useState7","_useState8","name4","setForumName4","_useState9","_useState10","name5","setForumName5","_fetchForumList","forumjson","nameVal","nameVal2","nameVal3","nameVal4","nameVal5","Authorization","getItem","useEffect","fetchForumList","SignOutButton","_error","removeItem","ViewForum","for","aria-label","CreateNewForum","submitForum","description","ype","Main","content","contentPage","Content_MainPageContent_MainPageContent","Components_ViewForum_ViewForum","Components_CreateNewForum_CreateNewForum","Components_SignOutButton_SignOutButton","App","getCurrentUser","setPageToSignIn","setPageToSignUp","Components_Main_Main","Components_Auth_Auth","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ade7f7f3.chunk.js","sourcesContent":["export default {\r\n    signIn: \"SIGNIN\",\r\n    signUp: \"SIGNUP\",\r\n    signedInMain: \"SIGNEDIN_MAIN\",\r\n    signedInUpdateName: \"SIGNEDIN_UPDATENAME\",\r\n    signedInUpdateAvatar: \"SIGNEDIN_UPDATEAVATAR\",\r\n    forgotPassword: \"FORGOT_PASSWORD\",\r\n    //This variable needs to be created in order to use it in the MainPageContent.js for the\r\n    //New Forum button on the main webpage  \r\n    createNewForum: \"CREATE_NEW_FORUM\",\r\n    viewForum: \"VIEW_FORUM\" //I dont actually know what these are for yet -jay\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SignForm = ({ setField, submitForm, values, fields }) => {\r\n    return <>\r\n        <form onSubmit={submitForm}>\r\n            {fields.map(d => {\r\n                const { key, name } = d;\r\n                return <div key={key} id=\"form_entry\">\r\n                    <span>{name}: </span>\r\n                    <input\r\n                        value={values[key]}\r\n                        name={key}\r\n                        onChange={setField}\r\n                        type={key === \"password\" || key === \"passwordConf\" ? \"password\" : ''}\r\n                    />\r\n                </div>\r\n            })}\r\n            <input id=\"submit_button\" type=\"submit\" value=\"Submit\" />\r\n        </form>\r\n    </>\r\n}\r\n\r\nSignForm.propTypes = {\r\n    setField: PropTypes.func.isRequired,\r\n    submitForm: PropTypes.func.isRequired,\r\n    values: PropTypes.shape({\r\n        email: PropTypes.string.isRequired,\r\n        userName: PropTypes.string,\r\n        firstName: PropTypes.string,\r\n        lastName: PropTypes.string,\r\n        password: PropTypes.string.isRequired,\r\n        passwordConf: PropTypes.string\r\n    }),\r\n    fields: PropTypes.arrayOf(PropTypes.shape({\r\n        key: PropTypes.string,\r\n        name: PropTypes.string\r\n    }))\r\n}\r\n\r\nexport default SignForm;","export default {\r\n    base: \"https://api.comtalk.tech\",\r\n    testbase: \"https://localhost:4000\",\r\n    //testbase: \"https://api.comtalk.tech\", //gonna try running with also testing locally on the deployed api\r\n    handlers: {\r\n        users: \"/v1/Seattle/users\",\r\n        myuser: \"/v1/Seattle/users/me\",\r\n        myuserAvatar: \"/v1/Seattle/users/me/avatar\",\r\n        sessions: \"/v1/Seattle/sessions\",\r\n        sessionsMine: \"/v1/Seattle/sessions/mine\",\r\n        resetPasscode: \"/v1/Seattle/resetcodes\",\r\n        passwords: \"/v1/Seattle/passwords/\",\r\n        forum: \"/v1/Seattle/forum\",\r\n        specificForum: \"/v1/Seattle/forum/\" //maybe put a :forumID in here\r\n    }\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Styles/Errors.css';\r\n\r\nconst Errors = ({ error, setError }) => {\r\n    switch (error) {\r\n        case \"\":\r\n            return <></>\r\n        default:\r\n            return <div className=\"error\">\r\n                <span className=\"error-hide\" onClick={() => setError(\"\")}>x</span>\r\n                Error: {error}\r\n            </div>\r\n    }\r\n}\r\n\r\nErrors.propTypes = {\r\n    error: PropTypes.string.isRequired,\r\n    setError: PropTypes.func\r\n}\r\n\r\nexport default Errors;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SignForm from '../SignForm/SignForm';\r\nimport api from '../../../../Constants/APIEndpoints/APIEndpoints';\r\nimport Errors from '../../../Errors/Errors';\r\nimport PageTypes from '../../../../Constants/PageTypes/PageTypes';\r\n\r\n/**\r\n * @class\r\n * @classdesc SignUp handles the sign up component\r\n */\r\nclass SignUp extends Component {\r\n    static propTypes = {\r\n        setPage: PropTypes.func,\r\n        setAuthToken: PropTypes.func\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            email: \"\",\r\n            userName: \"\",\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            password: \"\",\r\n            passwordConf: \"\",\r\n            error: \"\"\r\n        };\r\n\r\n        this.fields = [\r\n            {\r\n                name: \"Email\",\r\n                key: \"email\"\r\n            },\r\n            {\r\n                name: \"Username\",\r\n                key: \"userName\"\r\n            },\r\n            {\r\n                name: \"First name\",\r\n                key: \"firstName\"\r\n            },\r\n            {\r\n                name: \"Last name\",\r\n                key: \"lastName\"\r\n            },\r\n            {\r\n                name: \"Password\",\r\n                key: \"password\"\r\n            },\r\n            {\r\n                name: \"Password Confirmation\",\r\n                key: \"passwordConf\"\r\n            }];\r\n    }\r\n\r\n    /**\r\n     * @description setField will set the field for the provided argument\r\n     */\r\n    setField = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    /**\r\n     * @description setError sets the error message\r\n     */\r\n    setError = (error) => {\r\n        this.setState({ error })\r\n    }\r\n\r\n    /**\r\n     * @description submitForm handles the form submission\r\n     */\r\n    submitForm = async (e) => {\r\n        e.preventDefault();\r\n        const { email,\r\n            userName,\r\n            firstName,\r\n            lastName,\r\n            password,\r\n            passwordConf } = this.state;\r\n        const sendData = {\r\n            email,\r\n            userName,\r\n            firstName,\r\n            lastName,\r\n            password,\r\n            passwordConf\r\n        };\r\n        const response = await fetch(api.base + api.handlers.users, {\r\n            method: \"POST\",\r\n            body: JSON.stringify(sendData),\r\n            headers: new Headers({\r\n                \"Content-Type\": \"application/json\"\r\n            })\r\n        });\r\n        if (response.status >= 300) {\r\n            const error = await response.text();\r\n            this.setError(error);\r\n            return;\r\n        }\r\n        const authToken = response.headers.get(\"Authorization\")\r\n        localStorage.setItem(\"Authorization\", authToken);\r\n        this.setError(\"\");\r\n        this.props.setAuthToken(authToken);\r\n        const user = await response.json();\r\n        this.props.setUser(user);\r\n    }\r\n\r\n    render() {\r\n        const values = this.state;\r\n        const { error } = this.state;\r\n        return <>\r\n            <Errors error={error} setError={this.setError} />\r\n            <SignForm\r\n                setField={this.setField}\r\n                submitForm={this.submitForm}\r\n                values={values}\r\n                fields={this.fields} \r\n            />\r\n            <button id=\"submit_button\" onClick={(e) => this.props.setPage(e, PageTypes.signIn)}>Sign in instead</button>\r\n        </>\r\n    }\r\n}\r\n\r\nexport default SignUp;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SignForm from '../SignForm/SignForm';\r\nimport api from '../../../../Constants/APIEndpoints/APIEndpoints';\r\nimport Errors from '../../../Errors/Errors';\r\nimport PageTypes from '../../../../Constants/PageTypes/PageTypes';\r\n\r\n/**\r\n * @class\r\n * @classdesc SignIn handles the sign in component\r\n */\r\nclass SignIn extends Component {\r\n    static propTypes = {\r\n        setPage: PropTypes.func,\r\n        setAuthToken: PropTypes.func\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",\r\n            error: \"\"\r\n        };\r\n\r\n        this.fields = [\r\n            {\r\n                name: \"Email\",\r\n                key: \"email\"\r\n            },\r\n            {\r\n                name: \"Password\",\r\n                key: \"password\"\r\n            }];\r\n    }\r\n\r\n    /**\r\n     * @description setField will set the field for the provided argument\r\n     */\r\n    setField = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    /**\r\n     * @description setError sets the error message\r\n     */\r\n    setError = (error) => {\r\n        this.setState({ error })\r\n    }\r\n\r\n    /**\r\n     * @description submitForm handles the form submission\r\n     */\r\n    submitForm = async (e) => {\r\n        e.preventDefault();\r\n        const { email, password } = this.state;\r\n        const sendData = { email, password };\r\n        const response = await fetch(api.base + api.handlers.sessions, {\r\n            method: \"POST\",\r\n            body: JSON.stringify(sendData),\r\n            headers: new Headers({\r\n                \"Content-Type\": \"application/json\"\r\n            })\r\n        });\r\n        if (response.status >= 300) {\r\n            const error = await response.text();\r\n            this.setError(error);\r\n            return;\r\n        }\r\n        const authToken = response.headers.get(\"Authorization\")\r\n        localStorage.setItem(\"Authorization\", authToken);\r\n        this.setError(\"\");\r\n        this.props.setAuthToken(authToken);\r\n        const user = await response.json();\r\n        this.props.setUser(user);\r\n    }\r\n\r\n    render() {\r\n        const values = this.state;\r\n        const { error } = this.state;\r\n        return <>\r\n            <Errors error={error} setError={this.setError} />\r\n            <h1>ComTalk</h1>\r\n            <div id=\"form_entry\">\r\n                <SignForm\r\n                    setField={this.setField}\r\n                    submitForm={this.submitForm}\r\n                    values={values}\r\n                    fields={this.fields} \r\n                />\r\n             </div>\r\n            <button id=\"sign_up\" onClick={(e) => this.props.setPage(e, PageTypes.signUp)}>Sign Up</button>\r\n            <button id=\"forgot_password\" onClick={(e) => this.props.setPage(e, PageTypes.forgotPassword)}>Forgot Password</button>\r\n            <footer>\r\n                <p>Andy | Jay | Rayna | Wanyu | Copyright &copy; 2020</p>\r\n\t        </footer>\r\n        </>\r\n    }\r\n}\r\n\r\nexport default SignIn;","import React, { Component } from 'react';\r\nimport Errors from '../../../Errors/Errors';\r\nimport api from '../../../../Constants/APIEndpoints/APIEndpoints';\r\nimport PageTypes from '../../../../Constants/PageTypes/PageTypes';\r\n\r\nclass ForgotPassword extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",\r\n            passwordConf: \"\",\r\n            resetCode: \"\",\r\n            resetCodeSent: false,\r\n            error: \"\"\r\n        }\r\n    }\r\n\r\n    sendResetCode = async (e) => {\r\n        e.preventDefault();\r\n        const { email } = this.state;\r\n        const sendData = { email };\r\n        const response = await fetch(api.base + api.handlers.resetPasscode, {\r\n            method: \"POST\",\r\n            body: JSON.stringify(sendData),\r\n            headers: new Headers({\r\n                \"Content-Type\": \"application/json\"\r\n            })\r\n        });\r\n        if (response.status >= 300) {\r\n            const error = await response.text();\r\n            this.setError(error);\r\n            return;\r\n        }\r\n        this.setError(\"\");\r\n        alert(\"A reset code has been sent to your email\");\r\n        this.setState({ resetCodeSent: true });\r\n    }\r\n\r\n    updatePassword = async (e) => {\r\n        e.preventDefault();\r\n        const { email, password, passwordConf, resetCode } = this.state;\r\n        const sendData = { password, passwordConf, resetCode };\r\n        const response = await fetch(api.base + api.handlers.passwords + email, {\r\n            method: \"PUT\",\r\n            body: JSON.stringify(sendData),\r\n            headers: new Headers({\r\n                \"Content-Type\": \"application/json\"\r\n            })\r\n        });\r\n        if (response.status >= 300) {\r\n            const error = await response.text();\r\n            this.setError(error);\r\n            return;\r\n        }\r\n        this.setError(\"\");\r\n        alert(\"Your password has been updated\");\r\n    }\r\n\r\n    setValue = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    setError = (error) => {\r\n        this.setState({ error });\r\n    }\r\n\r\n    render() {\r\n        const { email, password, passwordConf, resetCode, resetCodeSent, error } = this.state;\r\n        return <>\r\n            <Errors error={error} setError={this.setError} />\r\n            {resetCodeSent ?\r\n                <>\r\n                    <form onSubmit={(e) => this.updatePassword(e)}>\r\n                        <div id=\"form_entry\">\r\n                            <span>Password: </span>\r\n                            <input name={\"password\"} type={\"password\"} onChange={this.setValue} value={password} />\r\n                        </div>\r\n                        <div id=\"form_entry\">\r\n                            <span>Password Confirmation: </span>\r\n                            <input name={\"passwordConf\"} type={\"password\"} onChange={this.setValue} value={passwordConf} />\r\n                        </div>\r\n                        <div id=\"form_entry\">\r\n                            <span>Reset Code: </span>\r\n                            <input name={\"resetCode\"} onChange={this.setValue} value={resetCode} />\r\n                        </div>\r\n                        <input id=\"submit_button\" type=\"submit\" value=\"Update my password\" />\r\n                    </form>\r\n                </>\r\n                :\r\n                <>\r\n                    <form onSubmit={(e) => this.sendResetCode(e)}>\r\n                        <div>\r\n                            <span>Email: </span>\r\n                            <input name={\"email\"} onChange={this.setValue} value={email} />\r\n                        </div>\r\n                        <input id=\"reset_button\" type=\"submit\" value=\"Send Reset Code\" />\r\n                    </form>\r\n                </>}\r\n            <button onClick={(e) => this.props.setPage(e, PageTypes.signIn)}>Back to sign in</button>\r\n\r\n\r\n        </>\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport default ForgotPassword;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport PageTypes from '../../Constants/PageTypes/PageTypes';\r\nimport SignUp from './Components/SignUp/SignUp';\r\nimport SignIn from './Components/SignIn/SignIn';\r\nimport ForgotPassword from './Components/ForgotPassword/ForgotPassword';\r\n\r\n/**\r\n * @class Auth\r\n * @description This is an auth object that controls what page\r\n * is loaded based on sign up or sign in state\r\n */\r\nconst Auth = ({ page, setPage, setAuthToken, setUser }) => {\r\n    switch (page) {\r\n        case PageTypes.signUp:\r\n            return <SignUp setPage={setPage} setAuthToken={setAuthToken} setUser={setUser} />\r\n        case PageTypes.signIn:\r\n            return <SignIn setPage={setPage} setAuthToken={setAuthToken} setUser={setUser} />\r\n        case PageTypes.forgotPassword:\r\n            return <ForgotPassword setPage={setPage} />;\r\n        default:\r\n            return <>Error, invalid path reached</>\r\n    }\r\n}\r\n\r\nAuth.propTypes = {\r\n    page: PropTypes.string.isRequired,\r\n    setPage: PropTypes.func.isRequired,\r\n    setAuthToken: PropTypes.func.isRequired,\r\n    setUser: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Auth;","import React, { useState, useEffect } from 'react';\r\nimport PageTypes from '../../../../Constants/PageTypes/PageTypes';\r\nimport './Styles/MainPageContent.css';\r\nimport api from '../../../../Constants/APIEndpoints/APIEndpoints';\r\n\r\nconst MainPageContent = ({ user, setPage }) => {\r\n    //Save State\r\n    const [name, setForumName] = useState(null)\r\n    const [name2, setForumName2] = useState(null)\r\n    const [name3, setForumName3] = useState(null)  \r\n    const [name4, setForumName4] = useState(null)  \r\n    const [name5, setForumName5] = useState(null)\r\n\r\n    //Fetch data from API\r\n    async function fetchForumList() {\r\n        const response = await fetch(api.base + api.handlers.forum, {\r\n            method: \"GET\",\r\n            headers: new Headers({\r\n                \"Authorization\": localStorage.getItem(\"Authorization\")\r\n            })\r\n        });\r\n        if (response.status >= 300) {\r\n            // const error = await response.text();\r\n            //setForumList(user.photoURL)\r\n            return;\r\n        }\r\n        const forumjson = await response.json();\r\n\r\n        //This code has bad style and is The Absolute Worst\r\n        //I have nicknamed it \"the world's worst For loop\"\r\n        //The style is such because I was unable to pass an array into the state, for some reason\r\n        //And I am too afraid of react to try to restructure this into a class with a render function\r\n        var nameVal = \"\"; \r\n        try {\r\n            nameVal = forumjson[0].name;\r\n        } //could put in a CATCH that helps with making the missing blocks invisible \r\n        finally {\r\n            setForumName(nameVal);\r\n        }\r\n\r\n        var nameVal2 = \"\";\r\n        try {\r\n            nameVal2 = forumjson[1].name;\r\n        } //could put in a CATCH that helps with making the missing blocks invisible \r\n        finally {\r\n            setForumName2(nameVal2);\r\n        }\r\n\r\n        var nameVal3 = \"\";\r\n        try {\r\n            nameVal3 = forumjson[2].name;\r\n        } //could put in a CATCH that helps with making the missing blocks invisible \r\n        finally {\r\n            setForumName3(nameVal3);\r\n        }\r\n\r\n        var nameVal4 = \"\";\r\n        try {\r\n            nameVal4 = forumjson[3].name;\r\n        } //could put in a CATCH that helps with making the missing blocks invisible \r\n        finally {\r\n            setForumName4(nameVal4);\r\n        }\r\n\r\n        var nameVal5 = \"\";\r\n        try {\r\n            nameVal5 = forumjson[4].name;\r\n        } //could put in a CATCH that helps with making the missing blocks invisible \r\n        finally {\r\n            setForumName5(nameVal5);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchForumList();\r\n        return;\r\n    }, []);\r\n\r\n    return <>\r\n        <main>\r\n\t\t\t<div>\r\n                <div><h2>Seattle's 5 Highlighted Forums</h2> </div>\r\n\r\n\t\t\t\t<div id=\"subscribed_channels\">\r\n                    <div><button onClick={(e) => { setPage(e, PageTypes.viewForum) }}>{name}</button></div>\r\n                    <div><button onClick={(e) => { setPage(e, PageTypes.viewForum) }}>{name2}</button></div>\r\n                    <div><button onClick={(e) => { setPage(e, PageTypes.viewForum) }}>{name3}</button></div>\r\n                    <div><button onClick={(e) => { setPage(e, PageTypes.viewForum) }}>{name4}</button></div>\r\n                    <div><button onClick={(e) => { setPage(e, PageTypes.viewForum) }}>{name5}</button></div>\r\n                </div>\r\n\r\n                <div><button onClick={(e) => { setPage(e, PageTypes.createNewForum) }}>New Forum</button></div>\r\n\t\t\t</div>\r\n\t</main>\r\n    </>\r\n}\r\n\r\nexport default MainPageContent;","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport api from '../../../../Constants/APIEndpoints/APIEndpoints';\r\nimport Errors from '../../../Errors/Errors';\r\n\r\nconst SignOutButton = ({ setAuthToken, setUser }) => {\r\n    const [error, setError] = useState(\"\");\r\n\r\n    return <><button id=\"sign_out\" onClick={async (e) => {\r\n        e.preventDefault();\r\n        const response = await fetch(api.base + api.handlers.sessionsMine, {\r\n            method: \"DELETE\"\r\n        });\r\n        if (response.status >= 300) {\r\n            const error = await response.text();\r\n            setError(error);\r\n            return;\r\n        }\r\n        localStorage.removeItem(\"Authorization\");\r\n        setError(\"\");\r\n        setAuthToken(\"\");\r\n        setUser(null);\r\n    }}>Sign Out</button>\r\n        {error &&\r\n            <div>\r\n                <Errors error={error} setError={setError} />\r\n            </div>\r\n        }\r\n    </>\r\n}\r\n\r\nSignOutButton.propTypes = {\r\n    setAuthToken: PropTypes.func.isRequired,\r\n    setUser: PropTypes.func.isRequired\r\n}\r\n\r\nexport default SignOutButton;","import React, { useState, useEffect } from 'react';\r\nimport PageTypes from '../../../../Constants/PageTypes/PageTypes';\r\nimport api from '../../../../Constants/APIEndpoints/APIEndpoints';\r\n\r\n/*\r\nfunction getGithubOrgs(url) {\r\n    return fetch(url, {\r\n        method: \"GET\",\r\n        headers: new Headers({\r\n            \"Authorization\": localStorage.getItem(\"Authorization\")\r\n        })\r\n    }).then((response) => response.json());\r\n}\r\n*/\r\n\r\nvar res;\r\n/*\r\nconst ViewForum extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.channels = {res: []}\r\n    }\r\n*/\r\n\r\nconst ViewForum = ({ user, setPage }) => {\r\n    //const [avatar, setForumList] = useState(null)\r\n\r\n\r\n    async function fetchForumList() {\r\n        const response = await fetch(api.base + api.handlers.specificForum + \"/\" + \"5fd881adfe2d961658a7cec8\", {\r\n            method: \"GET\",\r\n            headers: new Headers({\r\n                \"Authorization\": localStorage.getItem(\"Authorization\")\r\n            })\r\n        });\r\n        if (response.status >= 300) {\r\n            // const error = await response.text();\r\n            //setForumList(user.photoURL)\r\n            return;\r\n        }\r\n        const forumjson = await response.json();\r\n        console.log(forumjson[0]);\r\n        //console.log(forumjson[0].name);\r\n        /*\r\n        getGithubOrgs(api.base + api.handlers.specificForum).then((new_res) =>\r\n            res = new_res\r\n        );\r\n        */\r\n    }\r\n    return <>\r\n        <div>\r\n            <div><h2>Hiking for the Win!</h2></div>\r\n            <div>\r\n                <div id=\"posts\">\r\n                    <div id=\"rendered_messages\">\r\n                        <div id=\"post\"> \r\n                            <div id=\"username\">\r\n                                <p>John Doe</p>\r\n                            </div>\r\n                            <div id=\"timestamp\">\r\n                                <p>10/7/2020 5:00 pm</p>\r\n                            </div>\r\n                            <div id=\"mesage\">\r\n                                <p>Hey! Does anyone want to go on a hike in the PNW?</p>\r\n                            </div>\r\n                        </div>\r\n                        <div id=\"post\"> \r\n                            <div id=\"username\">\r\n                                <p>Jill Donovan</p>\r\n                            </div>\r\n                            <div id=\"timestamp\">\r\n                                <p>10/7/2020 7:12 pm</p>\r\n                            </div>\r\n                            <div id=\"mesage\">\r\n                                <p>Hiya! I am so down! Saturday? PS. Our initials match *Heart*!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n            <div id=\"new_message_container\">\r\n                <label for=\"new_message\"></label>\r\n                <textarea id=\"new_message\"></textarea>\r\n                <button aria-label=\"Send\">Send</button>\r\n            </div>\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default ViewForum;","import React, { Component } from 'react';\r\nimport api from '../../../../Constants/APIEndpoints/APIEndpoints';\r\nimport Errors from '../../../Errors/Errors';\r\n\r\nclass UpdateName extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            firstName: '',\r\n            lastName: '',\r\n            error: ''\r\n        }\r\n    }\r\n\r\n    sendRequest = async (e) => {\r\n        e.preventDefault();\r\n        const { firstName, lastName } = this.state;\r\n        const sendData = { firstName, lastName };\r\n        const response = await fetch(api.base + api.handlers.myuser, {\r\n            method: \"PATCH\",\r\n            body: JSON.stringify(sendData),\r\n            headers: new Headers({\r\n                \"Authorization\": localStorage.getItem(\"Authorization\"),\r\n                \"Content-Type\": \"application/json\"\r\n            })\r\n        });\r\n        if (response.status >= 300) {\r\n            const error = await response.text();\r\n            console.log(error);\r\n            this.setError(error);\r\n            return;\r\n        }\r\n        alert(\"Name changed\") // TODO make this better by refactoring errors\r\n        const user = await response.json();\r\n        this.props.setUser(user);\r\n    }\r\n\r\n    setValue = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    setError = (error) => {\r\n        this.setState({ error })\r\n    }\r\n\r\n    render() {\r\n        const { firstName, lastName, error } = this.state;\r\n        return <>\r\n            <Errors error={error} setError={this.setError} />\r\n            <div>Enter a new name</div>\r\n            <form onSubmit={this.sendRequest}>\r\n                <div>\r\n                    <span>First name: </span>\r\n                    <input name={\"firstName\"} value={firstName} onChange={this.setValue} />\r\n                </div>\r\n                <div>\r\n                    <span>Last name: </span>\r\n                    <input name={\"lastName\"} value={lastName} onChange={this.setValue} />\r\n                </div>\r\n                <input type=\"submit\" value=\"Change name\" />\r\n            </form>\r\n        </>\r\n    }\r\n\r\n}\r\n\r\nexport default UpdateName;","import React, { Component } from 'react';\r\nimport api from '../../../../Constants/APIEndpoints/APIEndpoints';\r\nimport Errors from '../../../Errors/Errors';\r\n\r\nclass UpdateAvatar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            file: null,\r\n            error: ''\r\n        }\r\n    }\r\n\r\n    sendRequest = async (e) => {\r\n        e.preventDefault();\r\n        const { file } = this.state;\r\n        let data = new FormData()\r\n        data.append('uploadfile', file);\r\n        const response = await fetch(api.base + api.handlers.myuserAvatar, {\r\n            method: \"PUT\",\r\n            body: data,\r\n            headers: new Headers({\r\n                \"Authorization\": localStorage.getItem(\"Authorization\"),\r\n            })\r\n        });\r\n        if (response.status >= 300) {\r\n            const error = await response.text();\r\n            console.log(error);\r\n            this.setError(error);\r\n            return;\r\n        }\r\n        alert(\"Avatar changed\"); // TODO make this better by refactoring errors\r\n    }\r\n\r\n    handleFile = (e) => {\r\n        this.setState({\r\n            file: e.target.files[0]\r\n        })\r\n    }\r\n\r\n    setError = (error) => {\r\n        this.setState({ error })\r\n    }\r\n\r\n    render() {\r\n        const { error } = this.state;\r\n        return <>\r\n            <Errors error={error} setError={this.setError} />\r\n            <div>Give yourself a new avatar</div>\r\n            <form onSubmit={this.sendRequest}>\r\n                <div>\r\n                    <span>Upload new avatar </span>\r\n                    <input type=\"file\" onChange={this.handleFile} />\r\n                </div>\r\n                <input type=\"submit\" value=\"Change avatar\" />\r\n            </form>\r\n        </>\r\n    }\r\n\r\n}\r\n\r\nexport default UpdateAvatar;","import React, { Component } from 'react';\r\nimport api from '../../../../Constants/APIEndpoints/APIEndpoints';\r\nimport Errors from '../../../Errors/Errors';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * @class\r\n * @classdesc CreateNewForum handles the creation of new forum name component\r\n */\r\n\r\nclass CreateNewForum extends Component {\r\n    static propTypes = {\r\n        setPage: PropTypes.func,\r\n        setAuthToken: PropTypes.func\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state= {\r\n            name: '',\r\n            description: '',\r\n            error: ''\r\n        };\r\n\r\n        this.fields = [\r\n            {\r\n                name: \"Name\",\r\n                key: \"name\"\r\n            },\r\n            {\r\n                name: \"Description\",\r\n                key: \"description\"\r\n            }\r\n        ]\r\n    }\r\n\r\n    /**\r\n     * @description setField will set the field for the provided argument\r\n     */\r\n    setField = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    /**\r\n     * @description setError sets the error message\r\n     */\r\n    setError = (error) => {\r\n        this.setState({ error })\r\n    }\r\n\r\n    /**\r\n     * @description submitForm handles the form submission\r\n     */\r\n    submitForum = async (e) => {\r\n        e.preventDefault();\r\n        const { name, description } = this.state;         \r\n    \r\n        const sendData = { name, description };\r\n\r\n        const response = await fetch(api.base + api.handlers.forum, {\r\n            method: \"POST\",\r\n            body: JSON.stringify(sendData),\r\n            headers: new Headers({\r\n                \"Content-Type\": \"application/json\"\r\n            })\r\n        });\r\n\r\n       // if (response.status >= 300) {\r\n       //     const error = await response.text();\r\n       //     this.setError(error);\r\n       //     return;\r\n       // }\r\n        const authToken = response.headers.get(\"Authorization\")\r\n        localStorage.setItem(\"Authorization\", authToken);\r\n        //this.setError(\"\");\r\n        //this.props.setAuthToken(authToken);\r\n        const user = await response.json();\r\n        this.props.setUser(user);\r\n    };\r\n\r\n    //These two lines of comments might be needed for future use inside the render function\r\n        //<Errors error={error} setError={this.setError} /> \r\n        //<button onClick={(e) => this.props.setPage(e, PageTypes.signedInMain)}>Submit</button>\r\n\r\n    render() {\r\n        const { name, description, error } = this.state;\r\n        return <>\r\n            <br />\r\n            <div>Create a new forum</div>\r\n            <br />\r\n\r\n            <div>\r\n                Instruction: Please enter the name and description for your new forum, and click on the \r\n                <strong> Submit</strong> button to submit your response. Use the <strong>Back to main </strong>\r\n                button to go back to the main page. Congratulations, you've just successfully created your new forum \r\n                 now! \r\n            </div>\r\n            <br />\r\n            <form onSubmit={this.submitForum}>\r\n                <div id=\"form_entry\">\r\n                    <span>Forum Name: </span>\r\n                    <input name={\"name\"} value={name} onChange={this.setField} />\r\n                </div>\r\n                <div id=\"form_entry\">\r\n                    <span>Description: </span>\r\n                    <input name={\"description\"} value={description} onChange={this.setField} />\r\n                </div>\r\n                <input id=\"submit_button\" ype=\"submit\" value=\"Submit\" />\r\n            </form>\r\n            <br />\r\n        </>\r\n    }\r\n\r\n}\r\n\r\nexport default CreateNewForum;","import React from 'react';\r\nimport PageTypes from '../../Constants/PageTypes/PageTypes';\r\nimport MainPageContent from './Content/MainPageContent/MainPageContent';\r\nimport SignOutButton from './Components/SignOutButton/SignOutButton';\r\nimport UpdateName from './Components/UpdateName/UpdateName';\r\nimport UpdateAvatar from './Components/UpdateAvatar/UpdateAvatar';\r\nimport ViewForum from './Components/ViewForum/ViewForum';\r\nimport CreateNewForum from './Components/CreateNewForum/CreateNewForum';\r\nimport './Content/MainPageContent/Styles/MainPageContent.css';\r\n\r\nconst Main = ({ page, setPage, setAuthToken, setUser, user }) => {\r\n    let content = <></>\r\n    let contentPage = true;\r\n    switch (page) {\r\n        case PageTypes.signedInMain:\r\n            content = <MainPageContent user={user} setPage={setPage} />;\r\n            break;\r\n        case PageTypes.signedInUpdateName:\r\n            //content = <UpdateName user={user} setUser={setUser} />;\r\n            content = <>If you're seeing this, Jay successfully removed the updateName page</>;\r\n            break;\r\n        case PageTypes.signedInUpdateAvatar:\r\n           // content = <UpdateAvatar user={user} setUser={setUser} />;\r\n            content = <>If you're seeing this, Jay successfully removed the updateAvatar page</>;\r\n            break;\r\n        case PageTypes.viewForum:\r\n             content = <ViewForum user={user} setUser={setUser} />;\r\n            //    content = <>This is a general forum, I swear!</>;\r\n                break;\r\n        case PageTypes.createNewForum:\r\n                 content = <CreateNewForum user={user} setPage={setUser}/>;\r\n                 break;\r\n        default:\r\n            content = <>Error, invalid path reached</>;\r\n            contentPage = false;\r\n            break;\r\n    }\r\n    return <>\r\n        <div>\r\n            <header>\r\n                <div><h1>ComTalk</h1> </div>\r\n\r\n                <div id=\"landing_title\">Hello, {user.firstName} {user.lastName}</div>\r\n            </header>\r\n        </div>\r\n        {content}\r\n        {contentPage && <button id=\"back_home\" onClick={(e) => setPage(e, PageTypes.signedInMain)}>Back to Main</button>}\r\n        <SignOutButton setUser={setUser} setAuthToken={setAuthToken} />\r\n\r\n        <footer>\r\n            <p>Andy | Jay | Rayna | Wanyu | Copyright &copy; 2020</p>\r\n\t    </footer>\r\n    </>\r\n}\r\n\r\nexport default Main;","import React, { Component } from 'react';\r\nimport Auth from './Components/Auth/Auth';\r\nimport PageTypes from './Constants/PageTypes/PageTypes';\r\nimport Main from './Components/Main/Main';\r\nimport './Styles/App.css';\r\nimport api from './Constants/APIEndpoints/APIEndpoints';\r\n\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            page: localStorage.getItem(\"Authorization\") ? PageTypes.signedInMain : PageTypes.signIn,\r\n            authToken: localStorage.getItem(\"Authorization\") || null,\r\n            user: null\r\n        }\r\n\r\n        this.getCurrentUser()\r\n    }\r\n\r\n\r\n    /**\r\n     * @description Gets the users\r\n     */\r\n    getCurrentUser = async () => {\r\n        if (!this.state.authToken) {\r\n            return;\r\n        }\r\n        const response = await fetch(api.base + api.handlers.myuser, {\r\n            headers: new Headers({\r\n                \"Authorization\": this.state.authToken\r\n            })\r\n        });\r\n        if (response.status >= 300) {\r\n            alert(\"Unable to verify login. Logging out...\");\r\n            localStorage.setItem(\"Authorization\", \"\");\r\n            this.setAuthToken(\"\");\r\n            this.setUser(null)\r\n            return;\r\n        }\r\n        const user = await response.json()\r\n        this.setUser(user);\r\n\r\n    }\r\n\r\n    /**\r\n     * @description sets the page type to sign in\r\n     */\r\n    setPageToSignIn = (e) => {\r\n        e.preventDefault();\r\n        this.setState({ page: PageTypes.signIn });\r\n    }\r\n\r\n    /**\r\n     * @description sets the page type to sign up\r\n     */\r\n    setPageToSignUp = (e) => {\r\n        e.preventDefault();\r\n        this.setState({ page: PageTypes.signUp });\r\n    }\r\n\r\n    setPage = (e, page) => {\r\n        e.preventDefault();\r\n        this.setState({ page });\r\n    }\r\n\r\n    /**\r\n     * @description sets auth token\r\n     */\r\n    setAuthToken = (authToken) => {\r\n        this.setState({ authToken, page: authToken === \"\" ? PageTypes.signIn : PageTypes.signedInMain });\r\n    }\r\n\r\n    /**\r\n     * @description sets the user\r\n     */\r\n    setUser = (user) => {\r\n        this.setState({ user });\r\n    }\r\n\r\n    render() {\r\n        const { page, user } = this.state;\r\n        return (\r\n            <div>\r\n                {user ?\r\n                    <Main page={page}\r\n                        setPage={this.setPage}\r\n                        setAuthToken={this.setAuthToken}\r\n                        user={user}\r\n                        setUser={this.setUser} />\r\n                    :\r\n                    <Auth page={page}\r\n                        setPage={this.setPage}\r\n                        setAuthToken={this.setAuthToken}\r\n                        setUser={this.setUser} />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}